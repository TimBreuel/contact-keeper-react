{"ast":null,"code":"var _jsxFileName = \"/Users/timbreuel/Desktop/contact-keeper/client/src/components/contacts/Contacts.jsx\";\nimport React, { useContext, Fragment, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactContext from \"../../context/contact/ContactContext\";\nimport ContactItem from \"./ContactItem\";\nexport default function Contacts() {\n  //NOW WE HAVE ACESS TO ALL METHODS FROM THE STATE\n  const contactContext = useContext(ContactContext); //DESTRUCTURING TO PULL OUT THE CONTACTS FROM THE STATE\n\n  const {\n    contacts,\n    filtered,\n    getContacts\n  } = contactContext;\n  useEffect(() => {\n    getContacts(); //eslint-disable-next-line\n  }, []);\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: \"#6c757d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, \"Please add a contact...\");\n  } else {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TransitionGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, filtered !== null ? filtered.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n      key: contact._id,\n      timeout: 500,\n      classNames: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ContactItem, {\n      contact: contact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }))) : contacts.map(contact => {\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        key: contact._id,\n        timeout: 500,\n        classNames: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ContactItem, {\n        contact: contact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }));\n    })));\n  }\n}","map":{"version":3,"sources":["/Users/timbreuel/Desktop/contact-keeper/client/src/components/contacts/Contacts.jsx"],"names":["React","useContext","Fragment","useEffect","CSSTransition","TransitionGroup","ContactContext","ContactItem","Contacts","contactContext","contacts","filtered","getContacts","length","color","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC;AACA,QAAMC,cAAc,GAAGR,UAAU,CAACK,cAAD,CAAjC,CAFiC,CAGjC;;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAsCH,cAA5C;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBAAO;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD,GAFD,MAEO;AACL,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACI,GAAT,CAAcC,OAAD,iBACX,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,MAAA,OAAO,EAAE,GAFX;AAGE,MAAA,UAAU,EAAC,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADH,GAUGN,QAAQ,CAACK,GAAT,CAAcC,OAAD,IAAa;AACxB,0BACE,oBAAC,aAAD;AACE,QAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,QAAA,OAAO,EAAE,GAFX;AAGE,QAAA,UAAU,EAAC,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD,KAVD,CAXN,CADF,CADF;AA2BD;AACF","sourcesContent":["import React, { useContext, Fragment, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactContext from \"../../context/contact/ContactContext\";\nimport ContactItem from \"./ContactItem\";\n\nexport default function Contacts() {\n  //NOW WE HAVE ACESS TO ALL METHODS FROM THE STATE\n  const contactContext = useContext(ContactContext);\n  //DESTRUCTURING TO PULL OUT THE CONTACTS FROM THE STATE\n  const { contacts, filtered, getContacts } = contactContext;\n\n  useEffect(() => {\n    getContacts();\n    //eslint-disable-next-line\n  }, []);\n\n  if (contacts.length === 0) {\n    return <h4 style={{ color: \"#6c757d\" }}>Please add a contact...</h4>;\n  } else {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          {filtered !== null\n            ? filtered.map((contact) => (\n                <CSSTransition\n                  key={contact._id}\n                  timeout={500}\n                  classNames=\"item\"\n                >\n                  <ContactItem contact={contact}></ContactItem>\n                </CSSTransition>\n              ))\n            : contacts.map((contact) => {\n                return (\n                  <CSSTransition\n                    key={contact._id}\n                    timeout={500}\n                    classNames=\"item\"\n                  >\n                    <ContactItem contact={contact}></ContactItem>\n                  </CSSTransition>\n                );\n              })}\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}