{"ast":null,"code":"var _jsxFileName = \"/Users/timbreuel/Desktop/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport ContactContext from \"./ContactContext\";\nimport ContactReducer from \"./ContactReducer\";\nimport axios from \"axios\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from \"../type\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  }; //state allows us to acces the state and dispatch allows us to dispatch objects tot the reducr\n\n  const [state, dispatch] = useReducer(ContactReducer, initialState); ///////////////\n  //GET CONTACTS\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; //////////////\n  //ADD CONTACT\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; /////////////////\n  //DELETE CONTACT\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //////////////////////\n  //SET CURRENT CONTACT\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; ////////////////////////\n  //CLEAR CURRENT CONTACT\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; /////////////////\n  //UPDATE CONTACT\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; /////////////////\n  //FILTER CONTACTS\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //////////////\n  //CLEAR FILTER\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  }; /////////////////\n  //CLEAR CONTACTS\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/timbreuel/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","ContactContext","ContactReducer","axios","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","response","msg","addContact","contact","config","headers","post","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","clearContacts","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\n\nimport ContactContext from \"./ContactContext\";\nimport ContactReducer from \"./ContactReducer\";\nimport axios from \"axios\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  GET_CONTACTS,\n  CLEAR_CONTACTS,\n} from \"../type\";\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null,\n  };\n  //state allows us to acces the state and dispatch allows us to dispatch objects tot the reducr\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  ///////////////\n  //GET CONTACTS\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n      dispatch({ type: GET_CONTACTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n\n  //////////////\n  //ADD CONTACT\n  const addContact = async (contact) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n      dispatch({ type: ADD_CONTACT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n  /////////////////\n  //DELETE CONTACT\n  const deleteContact = (id) => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n  //////////////////////\n  //SET CURRENT CONTACT\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n  ////////////////////////\n  //CLEAR CURRENT CONTACT\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n  /////////////////\n  //UPDATE CONTACT\n  const updateContact = (contact) => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n  /////////////////\n  //FILTER CONTACTS\n  const filterContacts = (text) => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n  //////////////\n  //CLEAR FILTER\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  /////////////////\n  //CLEAR CONTACTS\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n        getContacts,\n        clearContacts,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}