{"ast":null,"code":"var _jsxFileName = \"/Users/timbreuel/Desktop/contact-keeper/client/src/components/contacts/Contacts.jsx\";\nimport React, { useContext, Fragment } from \"react\";\nimport ContactContext from \"../../context/contact/ContactContext\";\nimport ContactItem from \"./ContactItem\";\nexport default function Contacts() {\n  //NOW WE HAVE ACESS TO ALL METHODS FROM THE STATE\n  const contactContext = useContext(ContactContext); //DESTRUCTURING TO PULL OUT THE CONTACTS FROM THE STATE\n\n  const {\n    contacts,\n    filtered\n  } = contactContext;\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }, \"Please add a contact...\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, filtered !== null ? filtered.map(contact => /*#__PURE__*/React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  })) : contacts.map(contact => {\n    return /*#__PURE__*/React.createElement(ContactItem, {\n      key: contact.id,\n      contact: contact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/timbreuel/Desktop/contact-keeper/client/src/components/contacts/Contacts.jsx"],"names":["React","useContext","Fragment","ContactContext","ContactItem","Contacts","contactContext","contacts","filtered","length","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC;AACA,QAAMC,cAAc,GAAGL,UAAU,CAACE,cAAD,CAAjC,CAFiC,CAGjC;;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,cAA/B;;AAEA,MAAIC,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AACD,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACE,GAAT,CAAcC,OAAD,iBACX,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAIGJ,QAAQ,CAACG,GAAT,CAAcC,OAAD,IAAa;AACxB,wBACE,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,MAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,CALN,CADF;AAaD","sourcesContent":["import React, { useContext, Fragment } from \"react\";\nimport ContactContext from \"../../context/contact/ContactContext\";\nimport ContactItem from \"./ContactItem\";\n\nexport default function Contacts() {\n  //NOW WE HAVE ACESS TO ALL METHODS FROM THE STATE\n  const contactContext = useContext(ContactContext);\n  //DESTRUCTURING TO PULL OUT THE CONTACTS FROM THE STATE\n  const { contacts, filtered } = contactContext;\n\n  if (contacts.length === 0) {\n    return <h4>Please add a contact...</h4>;\n  }\n  return (\n    <Fragment>\n      {filtered !== null\n        ? filtered.map((contact) => (\n            <ContactItem key={contact.id} contact={contact}></ContactItem>\n          ))\n        : contacts.map((contact) => {\n            return (\n              <ContactItem key={contact.id} contact={contact}></ContactItem>\n            );\n          })}\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}