{"ast":null,"code":"import _defineProperty from\"/Users/timbreuel/Desktop/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/timbreuel/Desktop/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/timbreuel/Desktop/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AlertContext from\"../../context/alert/AlertContext\";import{useContext,useEffect}from\"react\";import AuthContext from\"../../context/auth/AuthContext\";var Login=function Login(props){//USE CONTEXT\nvar alertContext=useContext(AlertContext);var authContext=useContext(AuthContext);//DESTRUCTURING CONTEXT\nvar setAlert=alertContext.setAlert;var loginUser=authContext.loginUser,error=authContext.error,clearErrors=authContext.clearErrors,isAuthenticated=authContext.isAuthenticated;useEffect(function(){if(isAuthenticated){props.history.push(\"/\");}if(error===\"Invalid Username / Email\"){setAlert(error,\"danger\");clearErrors();}//eslint-disable-next-line\n},[error,isAuthenticated,props.history]);var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var email=user.email,password=user.password;var onChange=function onChange(e){setUser(_objectSpread(_objectSpread({},user),{},_defineProperty({},e.target.name,[e.target.value])));};var onSubmit=function onSubmit(e){e.preventDefault();if(email===\"\"||password===\"\"){setAlert(\"Please feel out all fields\",\"danger\");}else{loginUser({email:email[0],password:password[0]});}};return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Login \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-info\"},\"Now\")),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",className:\"form-control\",name:\"email\",value:email,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",type:\"password\",name:\"password\",value:password,onChange:onChange})),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Login\",className:\"btn btn-info btn-block\"})));};export default Login;","map":{"version":3,"sources":["/Users/timbreuel/Desktop/contact-keeper/client/src/components/auth/Login.jsx"],"names":["React","useState","AlertContext","useContext","useEffect","AuthContext","Login","props","alertContext","authContext","setAlert","loginUser","error","clearErrors","isAuthenticated","history","push","email","password","user","setUser","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AlertContext from \"../../context/alert/AlertContext\";\nimport { useContext, useEffect } from \"react\";\nimport AuthContext from \"../../context/auth/AuthContext\";\n\nconst Login = (props) => {\n  //USE CONTEXT\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  //DESTRUCTURING CONTEXT\n  const { setAlert } = alertContext;\n  const { loginUser, error, clearErrors, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n    if (error === \"Invalid Username / Email\") {\n      setAlert(error, \"danger\");\n      clearErrors();\n    }\n    //eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = user;\n  const onChange = (e) => {\n    setUser({ ...user, [e.target.name]: [e.target.value] });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (email === \"\" || password === \"\") {\n      setAlert(\"Please feel out all fields\", \"danger\");\n    } else {\n      loginUser({\n        email: email[0],\n        password: password[0],\n      });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>\n        Login <span className=\"text-info\">Now</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            name=\"email\"\n            value={email}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={onChange}\n          />\n        </div>\n        <input type=\"submit\" value=\"Login\" className=\"btn btn-info btn-block\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}