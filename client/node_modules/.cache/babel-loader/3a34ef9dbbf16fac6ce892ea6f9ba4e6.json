{"ast":null,"code":"import _toConsumableArray from\"/Users/timbreuel/Desktop/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/timbreuel/Desktop/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER,CONTACT_ERROR,GET_CONTACTS,CLEAR_CONTACTS}from\"../type\";export default(function(state,action){switch(action.type){case GET_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:action.payload,loading:false});case ADD_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:[action.payload].concat(_toConsumableArray(state.contacts)),loading:false});case DELETE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload;}),loading:false});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload,loading:false});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null,loading:false});case UPDATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;}),loading:false});case FILTER_CONTACTS:return _objectSpread(_objectSpread({},state),{},{filtered:state.contacts.filter(function(contact){//matches global upper and lowercase\nvar regex=new RegExp(\"\".concat(action.payload),\"gi\");return contact.name.match(regex)||contact.email.match(regex);}),loading:false});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null,loading:false});case CONTACT_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload,loading:false});case CLEAR_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:[],filtered:null,error:null,current:null,loading:false});default:return state;}});","map":{"version":3,"sources":["/Users/timbreuel/Desktop/contact-keeper/client/src/context/contact/ContactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","filter","contact","_id","current","map","filtered","regex","RegExp","name","match","email","error"],"mappings":"iVAAA,OACEA,WADF,CAEEC,cAFF,CAGEC,WAHF,CAIEC,aAJF,CAKEC,cALF,CAMEC,eANF,CAOEC,YAPF,CAQEC,aARF,CASEC,YATF,CAUEC,cAVF,KAWO,SAXP,CAaA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKJ,CAAAA,YAAL,CACE,sCACKE,KADL,MAEEG,QAAQ,CAAEF,MAAM,CAACG,OAFnB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKf,CAAAA,WAAL,CACE,sCACKU,KADL,MAEEG,QAAQ,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,QAA5B,EAFV,CAGEE,OAAO,CAAE,KAHX,GAKF,IAAKd,CAAAA,cAAL,CACE,sCACKS,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CACR,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAApC,EADQ,CAFZ,CAKEC,OAAO,CAAE,KALX,GAOF,IAAKb,CAAAA,WAAL,CACE,sCACKQ,KADL,MAEES,OAAO,CAAER,MAAM,CAACG,OAFlB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKZ,CAAAA,aAAL,CACE,sCACKO,KADL,MAEES,OAAO,CAAE,IAFX,CAGEJ,OAAO,CAAE,KAHX,GAMF,IAAKX,CAAAA,cAAL,CACE,sCACKM,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeO,GAAf,CAAmB,SAACH,OAAD,QAC3BA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,CAAqCP,MAAM,CAACG,OAA5C,CAAsDG,OAD3B,EAAnB,CAFZ,CAKEF,OAAO,CAAE,KALX,GAQF,IAAKV,CAAAA,eAAL,CACE,sCACKK,KADL,MAEEW,QAAQ,CAAEX,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsB,SAACC,OAAD,CAAa,CAC3C;AACA,GAAMK,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcZ,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOG,CAAAA,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CACD,CAJS,CAFZ,CAOEP,OAAO,CAAE,KAPX,GAUF,IAAKT,CAAAA,YAAL,CACE,sCACKI,KADL,MAEEW,QAAQ,CAAE,IAFZ,CAGEN,OAAO,CAAE,KAHX,GAKF,IAAKR,CAAAA,aAAL,CACE,sCACKG,KADL,MAEEiB,KAAK,CAAEhB,MAAM,CAACG,OAFhB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKN,CAAAA,cAAL,CACE,sCACKC,KADL,MAEEG,QAAQ,CAAE,EAFZ,CAGEQ,QAAQ,CAAE,IAHZ,CAIEM,KAAK,CAAE,IAJT,CAKER,OAAO,CAAE,IALX,CAMEJ,OAAO,CAAE,KANX,GASF,QACE,MAAOL,CAAAA,KAAP,CA7EJ,CA+ED,CAhFD","sourcesContent":["import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  GET_CONTACTS,\n  CLEAR_CONTACTS,\n} from \"../type\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: false,\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n        loading: false,\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact._id !== action.payload\n        ),\n        loading: false,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n        loading: false,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n        loading: false,\n      };\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact._id === action.payload._id ? action.payload : contact\n        ),\n        loading: false,\n      };\n\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter((contact) => {\n          //matches global upper and lowercase\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return contact.name.match(regex) || contact.email.match(regex);\n        }),\n        loading: false,\n      };\n\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n        loading: false,\n      };\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: [],\n        filtered: null,\n        error: null,\n        current: null,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}