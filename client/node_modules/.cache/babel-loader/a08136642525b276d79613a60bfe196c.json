{"ast":null,"code":"import _defineProperty from\"/Users/timbreuel/Desktop/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/timbreuel/Desktop/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/timbreuel/Desktop/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AlertContext from\"../../context/alert/AlertContext\";import{useContext,useEffect}from\"react\";import AuthContext from\"../../context/auth/AuthContext\";var Register=function Register(props){////////////////////\n//USE ALERT CONTEXT\nvar alertContext=useContext(AlertContext);var setAlert=alertContext.setAlert;//////////////////\n//USE AUTH CONTEXT\nvar authContext=useContext(AuthContext);var registerUser=authContext.registerUser,error=authContext.error,clearErrors=authContext.clearErrors,isAuthenticated=authContext.isAuthenticated;useEffect(function(){if(isAuthenticated){props.history.push(\"/\");}if(error===\"User already exist!\"){setAlert(error,\"danger\");clearErrors();}//eslint-disable-next-line\n},[error,isAuthenticated,props.history]);/////////////////\n//USER USE STATE\nvar _useState=useState({name:\"\",email:\"\",password:\"\",repassword:\"\"}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];//DESTRUKTURING USER\nvar name=user.name,email=user.email,password=user.password,repassword=user.repassword;//////////////////\n//ON CHNAGE INPUTS\nvar onChange=function onChange(e){setUser(_objectSpread(_objectSpread({},user),{},_defineProperty({},e.target.name,e.target.value)));};////////////////////////////////\n//ON CLICK SUBMIT THE INPUT DATA\nvar onSubmit=function onSubmit(e){e.preventDefault();if(name===\"\"||email===\"\"||password===\"\"){setAlert(\"Please enter all fields\",\"danger\");}else if(password!==repassword){setAlert(\"Password do not match\",\"danger\");}else{//AXIOS THE DATA TO THE SERVER\nregisterUser({name:name,email:email,password:password});//SET INPUT FIELDS TO NULL\nsetUser({name:\"\",email:\"\",password:\"\",repassword:\"\"});}};return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Account \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-info\"},\"Register\")),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",name:\"name\",value:name,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",className:\"form-control\",name:\"email\",value:email,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",type:\"password\",name:\"password\",value:password,onChange:onChange,minLength:\"6\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"repassword\"},\"Repeat password\"),/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",type:\"password\",name:\"repassword\",value:repassword,onChange:onChange,minLength:\"6\"})),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Register\",className:\"btn btn-info btn-block\"})));};export default Register;","map":{"version":3,"sources":["/Users/timbreuel/Desktop/contact-keeper/client/src/components/auth/Register.jsx"],"names":["React","useState","AlertContext","useContext","useEffect","AuthContext","Register","props","alertContext","setAlert","authContext","registerUser","error","clearErrors","isAuthenticated","history","push","name","email","password","repassword","user","setUser","onChange","e","target","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AlertContext from \"../../context/alert/AlertContext\";\nimport { useContext, useEffect } from \"react\";\nimport AuthContext from \"../../context/auth/AuthContext\";\n\nconst Register = (props) => {\n  ////////////////////\n  //USE ALERT CONTEXT\n  const alertContext = useContext(AlertContext);\n  const { setAlert } = alertContext;\n\n  //////////////////\n  //USE AUTH CONTEXT\n  const authContext = useContext(AuthContext);\n  const { registerUser, error, clearErrors, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n    if (error === \"User already exist!\") {\n      setAlert(error, \"danger\");\n      clearErrors();\n    }\n    //eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  /////////////////\n  //USER USE STATE\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    repassword: \"\",\n  });\n  //DESTRUKTURING USER\n  const { name, email, password, repassword } = user;\n\n  //////////////////\n  //ON CHNAGE INPUTS\n  const onChange = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  ////////////////////////////////\n  //ON CLICK SUBMIT THE INPUT DATA\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (name === \"\" || email === \"\" || password === \"\") {\n      setAlert(\"Please enter all fields\", \"danger\");\n    } else if (password !== repassword) {\n      setAlert(\"Password do not match\", \"danger\");\n    } else {\n      //AXIOS THE DATA TO THE SERVER\n      registerUser({ name, email, password });\n      //SET INPUT FIELDS TO NULL\n      setUser({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        repassword: \"\",\n      });\n    }\n  };\n  return (\n    <div className=\"container\">\n      <h1>\n        Account <span className=\"text-info\">Register</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"name\"\n            value={name}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            name=\"email\"\n            value={email}\n            onChange={onChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={onChange}\n            minLength=\"6\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"repassword\">Repeat password</label>\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            name=\"repassword\"\n            value={repassword}\n            onChange={onChange}\n            minLength=\"6\"\n          />\n        </div>\n        <input\n          type=\"submit\"\n          value=\"Register\"\n          className=\"btn btn-info btn-block\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}